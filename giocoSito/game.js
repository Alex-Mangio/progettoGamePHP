import keyInputs from "./KeyInputs.js";
import Tile from "./gameMap.js";
import Player from "./player.js";

let ctx;
let canvas;

let canvasH = window.innerHeight;
let canvasW = window.innerWidth;

let gameOver = false;

const player = new Player({
    position:{
        x: 0,
        y: 0
    },
    velocity:{
        x: 0,
        y: 0
    }
});

let map = [];

let inputs = new keyInputs();

window.onload = () => {
    
    canvas = document.getElementById("canvas"); 
    
    ctx = canvas.getContext('2d');
    ctx.imageSmoothingEnabled = false;
    
    canvas.height = canvasH;
    canvas.width = canvasW;

    drawMap();

    const waitForImage = setInterval(() => {
        if (player.imageLoad) {
            clearInterval(waitForImage);
            requestAnimationFrame(update);
        }
    }, 100);
}

function update(){

    requestAnimationFrame(update);

    if(gameOver) return;

    movePlayer();

    player.position.x += player.velocity.x;
    player.position.y += player.velocity.y;

    ctx.clearRect(0, 0, canvas.width, canvas.height);

    map.forEach(square => {
        square.draw(ctx);

        const tileX = square.position.x;
        const tileY = square.position.y;
        const tileW = square.width;
        const tileH = square.height;

        const playerX = player.position.x;
        const playerY = player.position.y;
        const playerW = player.width;
        const playerH = player.height;

        const isColliding = (
            playerX < tileX + tileW &&
            playerX + playerW > tileX &&
            playerY < tileY + tileH &&
            playerY + playerH > tileY
        );

        if (isColliding) {
            if (player.velocity.x > 0) {
                player.position.x = tileX - playerW;
                player.velocity.x = 0;
            } else if (player.velocity.x < 0) {
                player.position.x = tileX + tileW;
                player.velocity.x = 0;
            }
            if (player.velocity.y > 0) {
                player.position.y = tileY - playerH;
                player.velocity.y = 0;
            } else if (player.velocity.y < 0) {
                player.position.y = tileY + tileH;
                player.velocity.y = 0;
            }
        }
    });

    player.drawPlayer(ctx);
}

function drawMap(){

    const mapMatrix = [ 
    ["","","","","","","","-","-","-","-","-","-","-","-","-","-","-","-","-","-","+","+","+","+","+","+","+","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["","","","","","","","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["","","","","","","","-","-","-","-","-","-","-","-","-","-","-","-","-","-","+","+","+","+","+","+","+","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["","","","","","","","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","+","+","+","+","+","+","+","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","+","+","+","+","+","+","+","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","+","+","+","+","+","+","+","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","+","+","+","+","+","+","+","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"],
    ["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-"]
];

    mapMatrix.forEach((row, i) => {
        row.forEach((symbol, j) => {
            switch(symbol){
                case "-":
                    map.push(
                        new Tile({
                            position: {
                                x:Tile.getWidth() * j,
                                y:Tile.getHeight() * i
                            }
                        })
                    );
                break;
                case "+":
                    map.push(
                        new Tile({
                            position: {
                                x:Tile.getWidth() * j,
                                y:Tile.getHeight() * i
                            }
                        })
                    );
                break;
            }
        })
    });

}

function movePlayer() {

    if (gameOver) return;

    const speed = 2;

    player.velocity.x = 0;
    player.velocity.y = 0;

    if (inputs.wPressed) {
        player.velocity.y = -speed;
    } else if (inputs.sPressed) {
        player.velocity.y = speed;
    } else if (inputs.aPressed) {
        player.velocity.x = -speed;
    } else if (inputs.dPressed) {
        player.velocity.x = speed;
    }
}